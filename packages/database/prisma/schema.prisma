// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  chatId        BigInt          @unique
  username      String?
  subscriptions Subscription[]
  WalletSession WalletSession[]
  encSeed       String?
  walletInfo    Json[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  @@index([chatId])
  @@index([username])
}

model Subscription {
  id          String   @id @default(cuid())
  users       User[]
  name        String
  description String
  price       Float
  validity    Int      @default(30)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
}

model WalletSession {
  id        String              @id @default(cuid())
  user      User                @relation(fields: [userId], references: [id])
  type      WalletSessionType
  dapp      String
  data      Json?
  status    WalletSessionStatus
  expiresAt DateTime
  userId    String
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
}

enum WalletSessionStatus {
  PENDING
  ACCEPTED
  REJECTED
}

enum WalletSessionType {
  CONNECTION_REQUEST
  TRANSACTION_REQUEST
}
